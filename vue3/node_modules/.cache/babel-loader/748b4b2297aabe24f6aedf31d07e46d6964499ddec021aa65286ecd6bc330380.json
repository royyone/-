{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"fileChoice\"\n};\nconst _hoisted_2 = {\n  class: \"tableBox\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", {\n  style: {\n    \"position\": \"sticky\",\n    \"top\": \"0\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"编号\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"学院\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"队伍名\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"姓名\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"奖项\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"说明\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"状态\"), /*#__PURE__*/_createElementVNode(\"th\")])], -1 /* HOISTED */);\nconst _hoisted_4 = [\"onUpdate:modelValue\", \"value\"];\nconst _hoisted_5 = [\"href\"];\nconst _hoisted_6 = {\n  class: \"addBtn\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ctHeader = _resolveComponent(\"ctHeader\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_ctHeader), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"fileInput\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.fileChange && $options.fileChange(...args)),\n    accept: \".xlsx\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.fileHandle && $options.fileHandle(...args))\n  }, \"上传\")]), _createCommentVNode(\" <table>\\r\\n      <thead><tr>\\r\\n        <th></th>\\r\\n        <th>编号</th>\\r\\n        <th>学院</th>\\r\\n        <th>队伍名</th>\\r\\n        <th>姓名</th>\\r\\n        <th>奖项</th>\\r\\n        <th>说明</th>\\r\\n        <th>状态</th>\\r\\n        <th></th>\\r\\n      </tr></thead>\\r\\n  </table> \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"table\", null, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.testdata, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: item.id\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => item.fla = $event,\n      name: \"same\",\n      value: item.fla\n    }, null, 8 /* PROPS */, _hoisted_4), [[_vModelCheckbox, item.fla]]), _createElementVNode(\"td\", null, _toDisplayString(index + 1), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.collegeName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.teamName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.stuName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.rkName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.explainText), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(item.status), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"a\", {\n      href: $options.getPath(index),\n      style: {\n        \"text-decoration\": \"none\"\n      }\n    }, \"预览\", 8 /* PROPS */, _hoisted_5)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $options.isAll = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $options.isAll]]), _createTextVNode(\" 全选 \"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.certificateCreate && $options.certificateCreate(...args))\n  }, \"奖状生成\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.certificateCreate && $options.certificateCreate(...args))\n  }, \"盖章\")]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => _ctx.Test && _ctx.Test(...args))\n  }, \"test\")])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","style","_createVNode","_component_ctHeader","_hoisted_1","type","ref","onChange","_cache","args","$options","fileChange","accept","onClick","fileHandle","_createCommentVNode","_hoisted_2","_hoisted_3","_createElementBlock","_Fragment","_renderList","$data","testdata","item","index","key","id","fla","$event","name","value","_toDisplayString","collegeName","teamName","stuName","rkName","explainText","status","href","getPath","_hoisted_5","_hoisted_6","isAll","certificateCreate","_ctx","Test"],"sources":["D:\\CertificateProject\\vue3\\src\\views\\adminHome.vue"],"sourcesContent":["<template>\r\n  <ctHeader></ctHeader>\r\n  <div class = 'fileChoice'>\r\n      <input type=\"file\" ref=\"fileInput\" @change=\"fileChange\" accept=\".xlsx\">\r\n      <button @click=\"fileHandle\">上传</button>\r\n  </div>\r\n  <!-- <table>\r\n      <thead><tr>\r\n        <th></th>\r\n        <th>编号</th>\r\n        <th>学院</th>\r\n        <th>队伍名</th>\r\n        <th>姓名</th>\r\n        <th>奖项</th>\r\n        <th>说明</th>\r\n        <th>状态</th>\r\n        <th></th>\r\n      </tr></thead>\r\n  </table> -->\r\n  <div class = \"tableBox\">\r\n    <table>\r\n      <thead style=\"position: sticky; top: 0;\"><tr>\r\n        <th></th>\r\n        <th>编号</th>\r\n        <th>学院</th>\r\n        <th>队伍名</th>\r\n        <th>姓名</th>\r\n        <th>奖项</th>\r\n        <th>说明</th>\r\n        <th>状态</th>\r\n        <th></th>\r\n      </tr></thead>\r\n      <tbody>\r\n        <tr v-for=\"(item, index) in testdata\" :key=\"item.id\">\r\n          <input type=\"checkbox\" v-model=\"item.fla\" name = 'same' :value=\"item.fla\">\r\n          <td>{{index+1}}</td>\r\n          <td>{{item.collegeName}}</td>\r\n          <td>{{item.teamName}}</td>\r\n          <td>{{item.stuName}}</td>\r\n          <td>{{item.rkName}}</td>\r\n          <td>{{item.explainText}}</td>\r\n          <td>{{item.status}}</td>\r\n          <td><a :href=\"getPath(index)\" style=\"text-decoration: none;\">预览</a></td>\r\n\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div class=\"addBtn\">\r\n        <input type=\"checkbox\" v-model=\"isAll\"> 全选\r\n        <button @click=\"certificateCreate\">奖状生成</button>\r\n        <button @click=\"certificateCreate\">盖章</button>\r\n    </div>\r\n    <div>\r\n      <button @click = \"Test\">test</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ctHeader from './ctHeader.vue';\r\nimport axios from 'axios';\r\nexport default {\r\n  created() {\r\n    this.update();\r\n  },\r\n  data() {\r\n    return {\r\n      selectedFile: '',\r\n      testdata: [\r\n        {\r\n          id: 1,\r\n          match_name: '',\r\n          college_name: '信息科学与技术学院',\r\n          team_name: 'Acm实验室',\r\n          stu_name: '潘志程 潘志程 潘志程',\r\n          adviser: '',\r\n          award: '金奖',\r\n          explainText: '',\r\n          status: '未审核',\r\n          ctPath: '',\r\n          fla: false\r\n        },\r\n        {\r\n          id: 2,\r\n          collegeName: '信息科学与技术学院',\r\n          teamName: 'Acm实验室',\r\n          stuName: '潘志程 潘志程 潘志程',\r\n          rkName: '金奖',\r\n          explainText: '',\r\n          status: '未审核',\r\n          ctPath: '',\r\n          fla: false\r\n        }\r\n      ]\r\n    };\r\n    \r\n  },\r\n  computed: {\r\n    isAll: {\r\n      get() {\r\n        return this.testdata.every(item => item.fla);\r\n      },\r\n      set(value) {\r\n        this.testdata.forEach(item => item.fla = value);\r\n      }\r\n    }\r\n  },  \r\n  methods: {\r\n    fileChange(event) {\r\n      // console.log('执行');\r\n      this.selectedFile = event.target.files[0];\r\n    },\r\n    fileHandle() {\r\n      let URL = 'http://localhost:8081/fileController/fileHandle';\r\n      let formdata = new FormData()\r\n      formdata.append('excelFile', this.selectedFile)\r\n      axios\r\n        .post(URL, formdata)\r\n        .then(res => {\r\n          this.update();\r\n        })\r\n        .catch(error => {\r\n          alert('上传失败');\r\n          console.error(error.message);\r\n        });\r\n      \r\n    },\r\n    getPath(index) {\r\n      // todo 获取pdf奖状查看\r\n      return \"https://www.baidu.com\";\r\n    },\r\n    update() {\r\n      // 获取新的数据\r\n      let URL = 'http://localhost:8081/awardController/awardSelect';\r\n      axios\r\n      .post(URL,{})\r\n      .then(res => {\r\n        this.testdata = res.data.data;\r\n        console.log('渲染');\r\n        console.log(this.testdata);\r\n      })\r\n      .catch(error => {\r\n        alert(error.message+'出错啦! update');\r\n      })\r\n    },\r\n    certificateCreate() {\r\n      // todo 生成奖状\r\n      if(this.checkCreate()) return ;\r\n      console.log('test149');\r\n      let URL = 'http://localhost:8081/fileController/certificateCreate';\r\n      this.testdata.forEach(item => {\r\n        console.log(item);\r\n        // let param = new URLSearchParams()\r\n        // param.append('id', item.id);\r\n        // param.append('match_name', item.match_name);\r\n        // param.append('college_name', item.college_name);\r\n        // param.append('stu_name', item.stu_name);\r\n        // param.append('team_name', item.team_name);\r\n        // param.append('adviser', item.adviser);\r\n        // param.append('award', item.award);\r\n        // param.append('status', item.status);\r\n          axios\r\n          .post(URL,{\r\n              id: item.id,\r\n              match_name: item.match_name,\r\n              college_name: item.college_name,\r\n              stu_name: item.stu_name,\r\n              team_name: item.team_name,\r\n              adviser: item.adviser,\r\n              award: item.award,\r\n              status: item.status,\r\n          })\r\n          .then(res => {\r\n            alert('成功');\r\n          })\r\n          .catch(error => {\r\n            console.log(item);\r\n            alert('创建pdf失败');\r\n            console.log(error.message);\r\n          })\r\n      });\r\n      this.update();\r\n    },\r\n    checkCreate() {\r\n      // 检查是否有未审核就盖章或者重复审核的情况；\r\n      return this.testdata.every(item => {\r\n        item.fla && item.status === '未审核' || !item.fla && item.status === '未盖章'\r\n      })\r\n    }\r\n  },\r\n  components: {\r\n    ctHeader\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang = 'scss'>\r\n.fileChoice{\r\n  background-color: aqua;\r\n}\r\n.tableBox{\r\n  margin-top: 100px;\r\n  margin-left: 10%;\r\n  margin-right: 10%;\r\n  width: 80%;\r\n  height: 500px;\r\n  overflow: auto;\r\n  // background-color: red;\r\n  border: 2px solid #0483d4;\r\n  border-collapse: collapse;\r\n  table {\r\n    // border: 2px solid #0483d4;\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n  }\r\n  th, td, input{\r\n    border: 1px solid #0483d4;\r\n    text-align: left;\r\n    padding: 8px;\r\n  }\r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n  tr:nth-child(even) {\r\n    background-color: #f2f2f2;\r\n  }\r\n}\r\n.addBtn{\r\n  background-color: red;\r\n}\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}