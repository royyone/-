{"ast":null,"code":"import ctHeader from './ctHeader.vue';\nimport axios from 'axios';\nexport default {\n  created() {\n    this.update();\n  },\n  data() {\n    return {\n      selectedFile: '',\n      testdata: [{\n        id: 1,\n        match_name: '',\n        college_name: '信息科学与技术学院',\n        team_name: 'Acm实验室',\n        stu_name: '潘志程 潘志程 潘志程',\n        adviser: '',\n        award: '金奖',\n        explainText: '',\n        status: '未审核',\n        ctPath: '',\n        fla: false\n      }, {\n        id: 2,\n        collegeName: '信息科学与技术学院',\n        teamName: 'Acm实验室',\n        stuName: '潘志程 潘志程 潘志程',\n        rkName: '金奖',\n        explainText: '',\n        status: '未审核',\n        ctPath: '',\n        fla: false\n      }]\n    };\n  },\n  computed: {\n    isAll: {\n      get() {\n        return this.testdata.every(item => item.fla);\n      },\n      set(value) {\n        this.testdata.forEach(item => item.fla = value);\n      }\n    }\n  },\n  methods: {\n    fileChange(event) {\n      // console.log('执行');\n      this.selectedFile = event.target.files[0];\n    },\n    fileHandle() {\n      let URL = 'http://localhost:8081/fileController/fileHandle';\n      let formdata = new FormData();\n      formdata.append('excelFile', this.selectedFile);\n      axios.post(URL, formdata).then(res => {\n        this.update();\n      }).catch(error => {\n        alert('上传失败');\n        console.error(error.message);\n      });\n    },\n    getPath(index) {\n      // todo 获取pdf奖状查看\n      return \"https://www.baidu.com\";\n    },\n    update() {\n      // 获取新的数据\n      let URL = 'http://localhost:8081/awardController/awardSelect';\n      axios.post(URL, {}).then(res => {\n        this.testdata = res.data.data;\n        console.log('渲染');\n        console.log(this.testdata);\n      }).catch(error => {\n        alert(error.message + '出错啦! update');\n      });\n    },\n    certificateCreate() {\n      // todo 生成奖状\n      if (this.checkCreate()) return;\n      console.log('test149');\n      let URL = 'http://localhost:8081/fileController/certificateCreate';\n      this.testdata.forEach(item => {\n        console.log(item);\n        // let param = new URLSearchParams()\n        // param.append('id', item.id);\n        // param.append('match_name', item.match_name);\n        // param.append('college_name', item.college_name);\n        // param.append('stu_name', item.stu_name);\n        // param.append('team_name', item.team_name);\n        // param.append('adviser', item.adviser);\n        // param.append('award', item.award);\n        // param.append('status', item.status);\n        axios.post(URL, {\n          id: item.id,\n          match_name: item.match_name,\n          college_name: item.college_name,\n          stu_name: item.stu_name,\n          team_name: item.team_name,\n          adviser: item.adviser,\n          award: item.award,\n          status: item.status\n        }).then(res => {\n          alert('成功');\n        }).catch(error => {\n          console.log(item);\n          alert('创建pdf失败');\n          console.log(error.message);\n        });\n      });\n      this.update();\n    },\n    checkCreate() {\n      // 检查是否有未审核就盖章或者重复审核的情况；\n      return this.testdata.every(item => {\n        item.fla && item.status === '未审核' || !item.fla && item.status === '未盖章';\n      });\n    }\n  },\n  components: {\n    ctHeader\n  }\n};","map":{"version":3,"names":["ctHeader","axios","created","update","data","selectedFile","testdata","id","match_name","college_name","team_name","stu_name","adviser","award","explainText","status","ctPath","fla","collegeName","teamName","stuName","rkName","computed","isAll","get","every","item","set","value","forEach","methods","fileChange","event","target","files","fileHandle","URL","formdata","FormData","append","post","then","res","catch","error","alert","console","message","getPath","index","log","certificateCreate","checkCreate","components"],"sources":["D:\\CertificateProject\\vue3\\src\\views\\adminHome.vue"],"sourcesContent":["<template>\r\n  <ctHeader></ctHeader>\r\n  <div class = 'fileChoice'>\r\n      <input type=\"file\" ref=\"fileInput\" @change=\"fileChange\" accept=\".xlsx\">\r\n      <button @click=\"fileHandle\">上传</button>\r\n  </div>\r\n  <!-- <table>\r\n      <thead><tr>\r\n        <th></th>\r\n        <th>编号</th>\r\n        <th>学院</th>\r\n        <th>队伍名</th>\r\n        <th>姓名</th>\r\n        <th>奖项</th>\r\n        <th>说明</th>\r\n        <th>状态</th>\r\n        <th></th>\r\n      </tr></thead>\r\n  </table> -->\r\n  <div class = \"tableBox\">\r\n    <table>\r\n      <thead style=\"position: sticky; top: 0;\"><tr>\r\n        <th></th>\r\n        <th>编号</th>\r\n        <th>学院</th>\r\n        <th>队伍名</th>\r\n        <th>姓名</th>\r\n        <th>奖项</th>\r\n        <th>说明</th>\r\n        <th>状态</th>\r\n        <th></th>\r\n      </tr></thead>\r\n      <tbody>\r\n        <tr v-for=\"(item, index) in testdata\" :key=\"item.id\">\r\n          <input type=\"checkbox\" v-model=\"item.fla\" name = 'same' :value=\"item.fla\">\r\n          <td>{{index+1}}</td>\r\n          <td>{{item.collegeName}}</td>\r\n          <td>{{item.teamName}}</td>\r\n          <td>{{item.stuName}}</td>\r\n          <td>{{item.rkName}}</td>\r\n          <td>{{item.explainText}}</td>\r\n          <td>{{item.status}}</td>\r\n          <td><a :href=\"getPath(index)\" style=\"text-decoration: none;\">预览</a></td>\r\n\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <div class=\"addBtn\">\r\n        <input type=\"checkbox\" v-model=\"isAll\"> 全选\r\n        <button @click=\"certificateCreate\">奖状生成</button>\r\n        <button @click=\"certificateCreate\">盖章</button>\r\n    </div>\r\n    <div>\r\n      <button @click = \"Test\">test</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ctHeader from './ctHeader.vue';\r\nimport axios from 'axios';\r\nexport default {\r\n  created() {\r\n    this.update();\r\n  },\r\n  data() {\r\n    return {\r\n      selectedFile: '',\r\n      testdata: [\r\n        {\r\n          id: 1,\r\n          match_name: '',\r\n          college_name: '信息科学与技术学院',\r\n          team_name: 'Acm实验室',\r\n          stu_name: '潘志程 潘志程 潘志程',\r\n          adviser: '',\r\n          award: '金奖',\r\n          explainText: '',\r\n          status: '未审核',\r\n          ctPath: '',\r\n          fla: false\r\n        },\r\n        {\r\n          id: 2,\r\n          collegeName: '信息科学与技术学院',\r\n          teamName: 'Acm实验室',\r\n          stuName: '潘志程 潘志程 潘志程',\r\n          rkName: '金奖',\r\n          explainText: '',\r\n          status: '未审核',\r\n          ctPath: '',\r\n          fla: false\r\n        }\r\n      ]\r\n    };\r\n    \r\n  },\r\n  computed: {\r\n    isAll: {\r\n      get() {\r\n        return this.testdata.every(item => item.fla);\r\n      },\r\n      set(value) {\r\n        this.testdata.forEach(item => item.fla = value);\r\n      }\r\n    }\r\n  },  \r\n  methods: {\r\n    fileChange(event) {\r\n      // console.log('执行');\r\n      this.selectedFile = event.target.files[0];\r\n    },\r\n    fileHandle() {\r\n      let URL = 'http://localhost:8081/fileController/fileHandle';\r\n      let formdata = new FormData()\r\n      formdata.append('excelFile', this.selectedFile)\r\n      axios\r\n        .post(URL, formdata)\r\n        .then(res => {\r\n          this.update();\r\n        })\r\n        .catch(error => {\r\n          alert('上传失败');\r\n          console.error(error.message);\r\n        });\r\n      \r\n    },\r\n    getPath(index) {\r\n      // todo 获取pdf奖状查看\r\n      return \"https://www.baidu.com\";\r\n    },\r\n    update() {\r\n      // 获取新的数据\r\n      let URL = 'http://localhost:8081/awardController/awardSelect';\r\n      axios\r\n      .post(URL,{})\r\n      .then(res => {\r\n        this.testdata = res.data.data;\r\n        console.log('渲染');\r\n        console.log(this.testdata);\r\n      })\r\n      .catch(error => {\r\n        alert(error.message+'出错啦! update');\r\n      })\r\n    },\r\n    certificateCreate() {\r\n      // todo 生成奖状\r\n      if(this.checkCreate()) return ;\r\n      console.log('test149');\r\n      let URL = 'http://localhost:8081/fileController/certificateCreate';\r\n      this.testdata.forEach(item => {\r\n        console.log(item);\r\n        // let param = new URLSearchParams()\r\n        // param.append('id', item.id);\r\n        // param.append('match_name', item.match_name);\r\n        // param.append('college_name', item.college_name);\r\n        // param.append('stu_name', item.stu_name);\r\n        // param.append('team_name', item.team_name);\r\n        // param.append('adviser', item.adviser);\r\n        // param.append('award', item.award);\r\n        // param.append('status', item.status);\r\n          axios\r\n          .post(URL,{\r\n              id: item.id,\r\n              match_name: item.match_name,\r\n              college_name: item.college_name,\r\n              stu_name: item.stu_name,\r\n              team_name: item.team_name,\r\n              adviser: item.adviser,\r\n              award: item.award,\r\n              status: item.status,\r\n          })\r\n          .then(res => {\r\n            alert('成功');\r\n          })\r\n          .catch(error => {\r\n            console.log(item);\r\n            alert('创建pdf失败');\r\n            console.log(error.message);\r\n          })\r\n      });\r\n      this.update();\r\n    },\r\n    checkCreate() {\r\n      // 检查是否有未审核就盖章或者重复审核的情况；\r\n      return this.testdata.every(item => {\r\n        item.fla && item.status === '未审核' || !item.fla && item.status === '未盖章'\r\n      })\r\n    }\r\n  },\r\n  components: {\r\n    ctHeader\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang = 'scss'>\r\n.fileChoice{\r\n  background-color: aqua;\r\n}\r\n.tableBox{\r\n  margin-top: 100px;\r\n  margin-left: 10%;\r\n  margin-right: 10%;\r\n  width: 80%;\r\n  height: 500px;\r\n  overflow: auto;\r\n  // background-color: red;\r\n  border: 2px solid #0483d4;\r\n  border-collapse: collapse;\r\n  table {\r\n    // border: 2px solid #0483d4;\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n  }\r\n  th, td, input{\r\n    border: 1px solid #0483d4;\r\n    text-align: left;\r\n    padding: 8px;\r\n  }\r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n  tr:nth-child(even) {\r\n    background-color: #f2f2f2;\r\n  }\r\n}\r\n.addBtn{\r\n  background-color: red;\r\n}\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}