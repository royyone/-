{"ast":null,"code":"import { withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"button\", {\n    type: \"text\",\n    onClick: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.downloadFile && $options.downloadFile(...args), [\"stop\", \"prevent\"]))\n  }, \"下载\");\n}","map":{"version":3,"names":["_createElementBlock","type","onClick","_cache","_withModifiers","args","$options","downloadFile"],"sources":["D:\\CertificateProject\\vue3\\src\\views\\demo.vue"],"sourcesContent":["<template>\r\n    <button type = \"text\" @click.stop.prevent=\"downloadFile\">下载</button>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n\r\n\r\n  export default {\r\n    methods: {\r\n    downloadFile (){\r\n    let downloadUrl = \"/fileController/fileLoad\"\r\n \r\n    axios\r\n    .get(downloadUrl)\r\n    .then(res => {\r\n        const blob = new Blob([res.data]);\r\n        //创建一个<a></a>标签\r\n        let a = document.createElement(\"a\");\r\n        // 将流文件写入a标签的href属性值\r\n        a.href = URL.createObjectURL(blob);\r\n        //设置文件名\r\n        a.download = \"template.txt\";\r\n        // 隐藏a标签\r\n        a.style.display = \"none\";\r\n        // 将a标签追加到文档对象中\r\n        document.body.appendChild(a); \r\n        // 模拟点击了a标签，会触发a标签的href的读取，浏览器就会自动下载了\r\n        a.click();\r\n        //用完就删除a标签\r\n        a.remove();\r\n    })\r\n  }\r\n}\r\n  }\r\n\r\n  </script>\r\n  "],"mappings":";;uBACIA,mBAAA,CAAoE;IAA5DC,IAAI,EAAG,MAAM;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAeC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;KAAE,IAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}